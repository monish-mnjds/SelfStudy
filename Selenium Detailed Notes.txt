Xpath
-----

xpath is also known as xml path, it is for finding the element in the webpage

xpath is the path of the web element in the dom/html.

in order to handle the dynamic elements we use xpath.

in order to traverse in the reverse order we use xpath.

indexing is allowed and it starts from 1.


absolute xpath is lengthy so we go for relative xpath.

we can use more than one attribute value in xpath

eg: //input[@name = 'username'][@class = 'textField']


we can use 'and' operation

if both the attributes are present it will find the web element 
otherwise it will raises NoSuchElementException.

eg: //input[@name='username' and @class='textField']

in the place 'and' we can even use 'or' operator and also 'not' operator.


xpath by text function:
-----------------------

we need to give leading and trailing spaces in the text(), if it is in visible text.

//tagname[text()='visible text']


xpath by normalize-space:
-------------------------

it is used to remove leading spaces and trailing spaces from the string.

//label[normalize-space(text())='keep me logged in']

//input[normalize-space(@name)='username']


xpath by contains:
------------------

//htmltag[contains(source, 'value')

//label[contains(text(),'keep me logged in')]

/input[contains(@id, 'username')]


xpath by starts-with:
---------------------

//htmltag[starts-with(source, 'value')]

//label[starts-with(text(),'keep me logged in')]

/input[starts-with(@id, 'username')]


xpath by grouping:
------------------

(//xpathExpression)[index]

(//div[@id='fruit']/button)[1]  # this will match all the first element

(//div[@id='fruit']/button)[1]  # this will match only the first element


xpath last():
-------------

(//xpathExpression)[last()]

#this gives the last element

-------------------------------------------------------------------------------------------

synchronization
---------------

the process of matching selenium speed with application is synchronization.

unconditional synchronization
-----------------------------

time.sleep(5)   #it will wait for certain time before proceeding....

it will wait for particular seconds eventhought the element is displayed....


in selenium, in some cases it will throw NoSuchElementException eventhough the specified locator is correct.
to handle this we use synchronization methods.

implicit wait
-------------

implicitlty_wait method will wait for certain amount of time before throwing exception

default value is 0.   

polling period:
---------------
implicitly_wait will search the web element in the dom for every 500 milliseconds before the time gets over.

after the time gets over it will throw no such element exception.      


we can specify implicitly_wait multiple time but it is not recommended and not necessary.....

implicitly_wait is only for find_element and find_elements......

-----------------------------------------------------------------------------------------------------------------

explicit wait
-------------

unlike implicit wait, explicit waits are applied for a particular instance only....not every instance

WebDriverWait and Expected Conditions are the classes to enforce the explicit wait.


WebDriverWait class takes two arguments....         #WebDriverWait(driver, 30)

first argument is the object of the WebDriver.    #driver = webdriver.Chrome()

second argument is the timeout...


until method takes one argument called condition methods.

to pass the condition we use the expected condition class.

when the condition is true it goes for the next line

when the condition is false, it will throw timeout exception, 
if the time is not over, for every 500 milliseconds it searches for the web element...
once the time gets over it raises TimeOut Exception........


implicit wait      vs       explicit wait
-----------------------------------------

1)  waiting condition is built-in                                   1) we should mention the waiting conditon 

2)  we can handle synchronization of find element
and find elements                                                   2)  can handle any method but one at a time

3) if time is over we get 
NoSuchElementException                                              3) if time is over we get TimeOutException


web element commands
--------------------
send_keys()
click()
clear()
find_element
find_elements
is_displayed()
is_enabled()
is_selected()    
get_attribute
get_property
tag_name            #returns the tag name
submit()
text
location            #returns x and y coordinates of a web element.....{'x':34,'y':35}            # get('x') gives the x coordinates value.....
size                #returns height and width of a web element........{'height':17, 'width':35}  # get{'height') gives the height of the web element.....
rect
value_of_css_property

clear() is used to clear the text present in the text boxes.

submit() is used to click on the button which is present in <form> tags...

rect works only for mozilla and returns both the size and location in a dictionary format....#{'x':12, 'y':23, 'height':10, 'width':21}

value_of_css_property('color')   #returns the css property value  like rgba(0, 0, 238, 1)

-----------------------------------------------------------------------------------------------------------------------------------------------------
