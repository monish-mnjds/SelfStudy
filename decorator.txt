
Decorators:
-----------


***** Decorators is a function, which takes some existing function as an argument, adds extra functionality and returns some existing function, without modifying the code. *****


-----------------------------------------------------------------------------------------------------------------------------------------------
Such functions that take other functions as arguments are also called higher order functions.

Functions and methods are called callable as they can be called.

In fact, any object which implements the special __call__() method is termed callable. So, in the most basic sense, a decorator is a callable that returns a callable.

Basically, a decorator takes in a function, adds some functionality and returns it.

We can use the @ symbol along with the name of the decorator function and place it above the definition of the function to be decorated. 

function(*args, **kwargs)

args will be the tuple of positional arguments and kwargs will be the dictionary of keyword arguments.

------------------------------------------------------------------------------------------------------------------------------------------------
